{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","navigator","clipboard","writeText","filter","element","length","Alert","height","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a71941a6.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Naim-App\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-$(props.mode==='light'?'dark':'light')`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\" \");\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Uppercase mode has Been enabled\",\"Success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"LowerCase mode has Been enabled\",\"Success\");\r\n  };\r\n  const handleReClick = () => {\r\n    let newText = text.split(\"\").reverse().join(\"\");\r\n    setText(newText);\r\n    props.showAlert(\"Reverse string mode has Been enabled\",\"Success\");\r\n  };\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"The strings has been copied to clipboard\",\"Success\");\r\n}  \r\n\r\n\r\n    const handleClrClick = ()=>{ \r\n     let newText = '';\r\n     setText(newText)\r\n     props.showAlert(\"The strings has been cleared from textarea\",\"Success\");\r\n        }\r\n  \r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor:props.mode==='dark'?' #4d0000':'white',color:props.mode==='dark'?'white':'#042743'}}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleReClick}>\r\n          Reverse the string\r\n        </button>\r\n        <button id =\"\"className=\"btn btn-primary mx-2 my-2\" onClick={handleCopyClick}>\r\n          Copy  to Clipboard\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleClrClick}>\r\n          Clear the String\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your text summary here</h2>\r\n        <p>\r\n          {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} and {text.length} characters\r\n        </p>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length * 0.008} Minutes took to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something to Preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n     { props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n       <strong> {props.alert.type} </strong>: {props.alert.msg}\r\n      </div>}\r\n      </div>\r\n    \r\n  );\r\n}\r\n","\nimport \"./App.css\";\nimport About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');//whether dark mode is enabled or not\n  const [alert,setAlert]= useState(null);\n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000);\n}\n\n\n\n  const toggleMode = ()=>{\n   if (mode==='light') {\n     setMode('dark')\n     document.body.style.backgroundColor='#042743'\n     showAlert(\"Dark mode has Been enabled\",\"Success\");\n   } else{\n     setMode('light')\n     document.body.style.backgroundColor='white'\n     showAlert(\"light mode has Been enabled\",\"Success\");\n   }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter Your Words Here to manipulate it!!\"  mode={mode} />\n          {/* </Route> */}\n     {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}